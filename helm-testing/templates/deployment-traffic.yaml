apiVersion: apps/v1
kind: Deployment
metadata:
  name: synthetic-traffic
spec:
  replicas: 1
  selector:
    matchLabels:
      fibonacci-setting: none
  template:
    metadata:
      labels:
        fibonacci-setting: none
    spec:
      containers:
        - name: traffic-container
          # Using this container name because it's the base of the fibonacci image
          # And has bash.
          # You may need to run docker pull gradle:jdk21-jammy if this is giving you trouble
          image: "gradle:jdk21-jammy"
          imagePullPolicy: Never
          env:
            - name: FIBONACCI_SETTING
              value: "bigint"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: script-volume
              mountPath: /home/gradle/make_requests.sh
              subPath: make_requests.sh
          command:
            ["/bin/bash", "make_requests.sh"]
      volumes:
        - name: script-volume
          configMap:
            name: synthetic-traffic-script
            items:
              - key: make_requests.sh
                path: make_requests.sh

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: synthetic-traffic-script
data:
  make_requests.sh: |
    counter=0

    # Wait and let the services start up
    sleep 20

    while true; do

      echo "Making requests with count = $counter"
      ((counter++))

      if [ $counter -eq 500 ]; then
          counter=0
      fi

      # These use & in order to not wait for the results
      # as the inefficient versions will take quite a while for the higher numbers
      #curl "int-service.default.svc.cluster.local/fibonacci?sequenceNumber=$counter" &
      #curl "bigint-service.default.svc.cluster.local/fibonacci?sequenceNumber=$counter" &
      #curl "bigint-memoized-service.default.svc.cluster.local/fibonacci?sequenceNumber=$counter" &

      # Second Test
      # Compare the performance of bigint-memoized and bigint-forloop
      #
      sequenceNumber=$((number * 800 + {{ $.Values.sequenceOffset }}))
      for ((i=1; i<={{ $.Values.loadFactor }}; i++)); do
        curl -s "bigint-memoized-service.default.svc.cluster.local/fibonacci?sequenceNumber=$sequenceNumber" &
        curl -s "bigint-forloop-service.default.svc.cluster.local/fibonacci?sequenceNumber=$sequenceNumber" &
      done


      sleep 2
    done

